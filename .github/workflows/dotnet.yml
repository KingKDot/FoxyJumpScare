name: FoxyJumpScare Auto Build

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: windows-latest
    permissions:
      contents: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup .NET Framework
        uses: microsoft/setup-msbuild@v2

      - name: Restore NuGet Packages
        run: nuget restore FoxyJumpScare.sln

      - name: Build Project
        run: msbuild FoxyJumpScare.sln /p:Configuration=Release

      - name: Find Built Executable
        id: find_exe
        shell: pwsh
        run: |
          $exe = Get-ChildItem -Path "./FoxyJumpScare/bin/Release" -Filter "*.exe" -Recurse | Select-Object -First 1
          if (-not $exe) { throw "No .exe file found in build output." }
          echo "EXE_PATH=$($exe.FullName)" >> $env:GITHUB_ENV
          echo "EXE_NAME=$($exe.Name)" >> $env:GITHUB_ENV
          Write-Host "Found executable: $($exe.FullName)"

      - name: Upload Executable Artifact
        uses: actions/upload-artifact@v4
        with:
          name: FoxyJumpScare-AutoBuild
          path: ${{ env.EXE_PATH }}

      - name: Delete Existing Release (if exists)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: bash
        run: |
          gh release delete AutoBuild --yes --cleanup-tag || echo "No existing AutoBuild release found"

      - name: Create Release with EXE
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: bash
        run: |
          gh release create AutoBuild "${{ env.EXE_PATH }}" \
            -t "AutoBuild" \
            -n "Automated FoxyJumpScare build (latest push to main)" \
            --draft=false \
            --prerelease=false
